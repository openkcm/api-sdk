// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: kms/api/cmk/registry/system/v1/system.proto

package systemv1

import (
	v1 "github.com/openkcm/api-sdk/proto/kms/api/cmk/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type System struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	L2KeyId       string                 `protobuf:"bytes,3,opt,name=l2key_id,json=l2keyId,proto3" json:"l2key_id,omitempty"`
	HasL1KeyClaim bool                   `protobuf:"varint,4,opt,name=has_l1key_claim,json=hasL1keyClaim,proto3" json:"has_l1key_claim,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Type          string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Status        v1.Status              `protobuf:"varint,7,opt,name=status,proto3,enum=kms.api.cmk.types.v1.Status" json:"status,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *System) Reset() {
	*x = System{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{0}
}

func (x *System) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *System) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *System) GetL2KeyId() string {
	if x != nil {
		return x.L2KeyId
	}
	return ""
}

func (x *System) GetHasL1KeyClaim() bool {
	if x != nil {
		return x.HasL1KeyClaim
	}
	return false
}

func (x *System) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *System) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *System) GetStatus() v1.Status {
	if x != nil {
		return x.Status
	}
	return v1.Status(0)
}

func (x *System) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *System) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *System) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RegisterSystemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	L2KeyId       string                 `protobuf:"bytes,3,opt,name=l2key_id,json=l2keyId,proto3" json:"l2key_id,omitempty"`
	HasL1KeyClaim bool                   `protobuf:"varint,4,opt,name=has_l1key_claim,json=hasL1keyClaim,proto3" json:"has_l1key_claim,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Status        v1.Status              `protobuf:"varint,7,opt,name=status,proto3,enum=kms.api.cmk.types.v1.Status" json:"status,omitempty"`
	Type          string                 `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterSystemRequest) Reset() {
	*x = RegisterSystemRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSystemRequest) ProtoMessage() {}

func (x *RegisterSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSystemRequest.ProtoReflect.Descriptor instead.
func (*RegisterSystemRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterSystemRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *RegisterSystemRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RegisterSystemRequest) GetL2KeyId() string {
	if x != nil {
		return x.L2KeyId
	}
	return ""
}

func (x *RegisterSystemRequest) GetHasL1KeyClaim() bool {
	if x != nil {
		return x.HasL1KeyClaim
	}
	return false
}

func (x *RegisterSystemRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegisterSystemRequest) GetStatus() v1.Status {
	if x != nil {
		return x.Status
	}
	return v1.Status(0)
}

func (x *RegisterSystemRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RegisterSystemRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RegisterSystemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterSystemResponse) Reset() {
	*x = RegisterSystemResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSystemResponse) ProtoMessage() {}

func (x *RegisterSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSystemResponse.ProtoReflect.Descriptor instead.
func (*RegisterSystemResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterSystemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListSystemsRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ExternalId string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region     string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	TenantId   string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Type       string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Default value is 50.
	// Max value is 1000.
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Next page token.
	PageToken     string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemsRequest) Reset() {
	*x = ListSystemsRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsRequest) ProtoMessage() {}

func (x *ListSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemsRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{3}
}

func (x *ListSystemsRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *ListSystemsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListSystemsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListSystemsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListSystemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSystemsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSystemsResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Systems []*System              `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
	// Token of the next pagination page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemsResponse) Reset() {
	*x = ListSystemsResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsResponse) ProtoMessage() {}

func (x *ListSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsResponse.ProtoReflect.Descriptor instead.
func (*ListSystemsResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{4}
}

func (x *ListSystemsResponse) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *ListSystemsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteSystemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSystemRequest) Reset() {
	*x = DeleteSystemRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemRequest) ProtoMessage() {}

func (x *DeleteSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemRequest.ProtoReflect.Descriptor instead.
func (*DeleteSystemRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSystemRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DeleteSystemRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type DeleteSystemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSystemResponse) Reset() {
	*x = DeleteSystemResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemResponse) ProtoMessage() {}

func (x *DeleteSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemResponse.ProtoReflect.Descriptor instead.
func (*DeleteSystemResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSystemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateSystemL1KeyClaimRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	TenantId      string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	L1KeyClaim    bool                   `protobuf:"varint,4,opt,name=l1key_claim,json=l1keyClaim,proto3" json:"l1key_claim,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSystemL1KeyClaimRequest) Reset() {
	*x = UpdateSystemL1KeyClaimRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSystemL1KeyClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemL1KeyClaimRequest) ProtoMessage() {}

func (x *UpdateSystemL1KeyClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemL1KeyClaimRequest.ProtoReflect.Descriptor instead.
func (*UpdateSystemL1KeyClaimRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSystemL1KeyClaimRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *UpdateSystemL1KeyClaimRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateSystemL1KeyClaimRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateSystemL1KeyClaimRequest) GetL1KeyClaim() bool {
	if x != nil {
		return x.L1KeyClaim
	}
	return false
}

type UpdateSystemL1KeyClaimResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSystemL1KeyClaimResponse) Reset() {
	*x = UpdateSystemL1KeyClaimResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSystemL1KeyClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemL1KeyClaimResponse) ProtoMessage() {}

func (x *UpdateSystemL1KeyClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemL1KeyClaimResponse.ProtoReflect.Descriptor instead.
func (*UpdateSystemL1KeyClaimResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSystemL1KeyClaimResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnlinkSystemsFromTenantRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SystemIdentifiers []*SystemIdentifier    `protobuf:"bytes,1,rep,name=system_identifiers,json=systemIdentifiers,proto3" json:"system_identifiers,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UnlinkSystemsFromTenantRequest) Reset() {
	*x = UnlinkSystemsFromTenantRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkSystemsFromTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkSystemsFromTenantRequest) ProtoMessage() {}

func (x *UnlinkSystemsFromTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkSystemsFromTenantRequest.ProtoReflect.Descriptor instead.
func (*UnlinkSystemsFromTenantRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{9}
}

func (x *UnlinkSystemsFromTenantRequest) GetSystemIdentifiers() []*SystemIdentifier {
	if x != nil {
		return x.SystemIdentifiers
	}
	return nil
}

type UnlinkSystemsFromTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkSystemsFromTenantResponse) Reset() {
	*x = UnlinkSystemsFromTenantResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkSystemsFromTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkSystemsFromTenantResponse) ProtoMessage() {}

func (x *UnlinkSystemsFromTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkSystemsFromTenantResponse.ProtoReflect.Descriptor instead.
func (*UnlinkSystemsFromTenantResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{10}
}

func (x *UnlinkSystemsFromTenantResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LinkSystemsToTenantRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SystemIdentifiers []*SystemIdentifier    `protobuf:"bytes,1,rep,name=system_identifiers,json=systemIdentifiers,proto3" json:"system_identifiers,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LinkSystemsToTenantRequest) Reset() {
	*x = LinkSystemsToTenantRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkSystemsToTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSystemsToTenantRequest) ProtoMessage() {}

func (x *LinkSystemsToTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSystemsToTenantRequest.ProtoReflect.Descriptor instead.
func (*LinkSystemsToTenantRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{11}
}

func (x *LinkSystemsToTenantRequest) GetSystemIdentifiers() []*SystemIdentifier {
	if x != nil {
		return x.SystemIdentifiers
	}
	return nil
}

func (x *LinkSystemsToTenantRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type LinkSystemsToTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkSystemsToTenantResponse) Reset() {
	*x = LinkSystemsToTenantResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkSystemsToTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSystemsToTenantResponse) ProtoMessage() {}

func (x *LinkSystemsToTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSystemsToTenantResponse.ProtoReflect.Descriptor instead.
func (*LinkSystemsToTenantResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{12}
}

func (x *LinkSystemsToTenantResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateSystemStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Status        v1.Status              `protobuf:"varint,3,opt,name=status,proto3,enum=kms.api.cmk.types.v1.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSystemStatusRequest) Reset() {
	*x = UpdateSystemStatusRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSystemStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemStatusRequest) ProtoMessage() {}

func (x *UpdateSystemStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateSystemStatusRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSystemStatusRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *UpdateSystemStatusRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateSystemStatusRequest) GetStatus() v1.Status {
	if x != nil {
		return x.Status
	}
	return v1.Status(0)
}

type UpdateSystemStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSystemStatusResponse) Reset() {
	*x = UpdateSystemStatusResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSystemStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemStatusResponse) ProtoMessage() {}

func (x *UpdateSystemStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateSystemStatusResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSystemStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SystemIdentifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemIdentifier) Reset() {
	*x = SystemIdentifier{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemIdentifier) ProtoMessage() {}

func (x *SystemIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemIdentifier.ProtoReflect.Descriptor instead.
func (*SystemIdentifier) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{15}
}

func (x *SystemIdentifier) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *SystemIdentifier) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type SetSystemLabelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSystemLabelsRequest) Reset() {
	*x = SetSystemLabelsRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSystemLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSystemLabelsRequest) ProtoMessage() {}

func (x *SetSystemLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSystemLabelsRequest.ProtoReflect.Descriptor instead.
func (*SetSystemLabelsRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{16}
}

func (x *SetSystemLabelsRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *SetSystemLabelsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SetSystemLabelsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type SetSystemLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSystemLabelsResponse) Reset() {
	*x = SetSystemLabelsResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSystemLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSystemLabelsResponse) ProtoMessage() {}

func (x *SetSystemLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSystemLabelsResponse.ProtoReflect.Descriptor instead.
func (*SetSystemLabelsResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{17}
}

func (x *SetSystemLabelsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RemoveSystemLabelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	LabelKeys     []string               `protobuf:"bytes,3,rep,name=label_keys,json=labelKeys,proto3" json:"label_keys,omitempty"` // Keys of labels to delete
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSystemLabelsRequest) Reset() {
	*x = RemoveSystemLabelsRequest{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSystemLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSystemLabelsRequest) ProtoMessage() {}

func (x *RemoveSystemLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSystemLabelsRequest.ProtoReflect.Descriptor instead.
func (*RemoveSystemLabelsRequest) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveSystemLabelsRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *RemoveSystemLabelsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RemoveSystemLabelsRequest) GetLabelKeys() []string {
	if x != nil {
		return x.LabelKeys
	}
	return nil
}

type RemoveSystemLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSystemLabelsResponse) Reset() {
	*x = RemoveSystemLabelsResponse{}
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSystemLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSystemLabelsResponse) ProtoMessage() {}

func (x *RemoveSystemLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kms_api_cmk_registry_system_v1_system_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSystemLabelsResponse.ProtoReflect.Descriptor instead.
func (*RemoveSystemLabelsResponse) Descriptor() ([]byte, []int) {
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveSystemLabelsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_kms_api_cmk_registry_system_v1_system_proto protoreflect.FileDescriptor

const file_kms_api_cmk_registry_system_v1_system_proto_rawDesc = "" +
	"\n" +
	"+kms/api/cmk/registry/system/v1/system.proto\x12\x1ekms.api.cmk.registry.system.v1\x1a!kms/api/cmk/types/v1/status.proto\"\xb0\x03\n" +
	"\x06System\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x19\n" +
	"\bl2key_id\x18\x03 \x01(\tR\al2keyId\x12&\n" +
	"\x0fhas_l1key_claim\x18\x04 \x01(\bR\rhasL1keyClaim\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\x124\n" +
	"\x06status\x18\a \x01(\x0e2\x1c.kms.api.cmk.types.v1.StatusR\x06status\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\x12J\n" +
	"\x06labels\x18\n" +
	" \x03(\v22.kms.api.cmk.registry.system.v1.System.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x03\n" +
	"\x15RegisterSystemRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x19\n" +
	"\bl2key_id\x18\x03 \x01(\tR\al2keyId\x12&\n" +
	"\x0fhas_l1key_claim\x18\x04 \x01(\bR\rhasL1keyClaim\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\x124\n" +
	"\x06status\x18\a \x01(\x0e2\x1c.kms.api.cmk.types.v1.StatusR\x06status\x12\x12\n" +
	"\x04type\x18\b \x01(\tR\x04type\x12Y\n" +
	"\x06labels\x18\t \x03(\v2A.kms.api.cmk.registry.system.v1.RegisterSystemRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"2\n" +
	"\x16RegisterSystemResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xb3\x01\n" +
	"\x12ListSystemsRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\tR\btenantId\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x06 \x01(\tR\tpageToken\"\x7f\n" +
	"\x13ListSystemsResponse\x12@\n" +
	"\asystems\x18\x01 \x03(\v2&.kms.api.cmk.registry.system.v1.SystemR\asystems\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"N\n" +
	"\x13DeleteSystemRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\"0\n" +
	"\x14DeleteSystemResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x96\x01\n" +
	"\x1dUpdateSystemL1KeyClaimRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\tR\btenantId\x12\x1f\n" +
	"\vl1key_claim\x18\x04 \x01(\bR\n" +
	"l1keyClaim\":\n" +
	"\x1eUpdateSystemL1KeyClaimResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x81\x01\n" +
	"\x1eUnlinkSystemsFromTenantRequest\x12_\n" +
	"\x12system_identifiers\x18\x01 \x03(\v20.kms.api.cmk.registry.system.v1.SystemIdentifierR\x11systemIdentifiers\";\n" +
	"\x1fUnlinkSystemsFromTenantResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x9a\x01\n" +
	"\x1aLinkSystemsToTenantRequest\x12_\n" +
	"\x12system_identifiers\x18\x01 \x03(\v20.kms.api.cmk.registry.system.v1.SystemIdentifierR\x11systemIdentifiers\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"7\n" +
	"\x1bLinkSystemsToTenantResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x8a\x01\n" +
	"\x19UpdateSystemStatusRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x124\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1c.kms.api.cmk.types.v1.StatusR\x06status\"6\n" +
	"\x1aUpdateSystemStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"K\n" +
	"\x10SystemIdentifier\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\"\xe8\x01\n" +
	"\x16SetSystemLabelsRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12Z\n" +
	"\x06labels\x18\x03 \x03(\v2B.kms.api.cmk.registry.system.v1.SetSystemLabelsRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"3\n" +
	"\x17SetSystemLabelsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"s\n" +
	"\x19RemoveSystemLabelsRequest\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1d\n" +
	"\n" +
	"label_keys\x18\x03 \x03(\tR\tlabelKeys\"6\n" +
	"\x1aRemoveSystemLabelsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xf9\t\n" +
	"\aService\x12\x81\x01\n" +
	"\x0eRegisterSystem\x125.kms.api.cmk.registry.system.v1.RegisterSystemRequest\x1a6.kms.api.cmk.registry.system.v1.RegisterSystemResponse\"\x00\x12x\n" +
	"\vListSystems\x122.kms.api.cmk.registry.system.v1.ListSystemsRequest\x1a3.kms.api.cmk.registry.system.v1.ListSystemsResponse\"\x00\x12{\n" +
	"\fDeleteSystem\x123.kms.api.cmk.registry.system.v1.DeleteSystemRequest\x1a4.kms.api.cmk.registry.system.v1.DeleteSystemResponse\"\x00\x12\x99\x01\n" +
	"\x16UpdateSystemL1KeyClaim\x12=.kms.api.cmk.registry.system.v1.UpdateSystemL1KeyClaimRequest\x1a>.kms.api.cmk.registry.system.v1.UpdateSystemL1KeyClaimResponse\"\x00\x12\x9c\x01\n" +
	"\x17UnlinkSystemsFromTenant\x12>.kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantRequest\x1a?.kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantResponse\"\x00\x12\x90\x01\n" +
	"\x13LinkSystemsToTenant\x12:.kms.api.cmk.registry.system.v1.LinkSystemsToTenantRequest\x1a;.kms.api.cmk.registry.system.v1.LinkSystemsToTenantResponse\"\x00\x12\x8d\x01\n" +
	"\x12UpdateSystemStatus\x129.kms.api.cmk.registry.system.v1.UpdateSystemStatusRequest\x1a:.kms.api.cmk.registry.system.v1.UpdateSystemStatusResponse\"\x00\x12\x84\x01\n" +
	"\x0fSetSystemLabels\x126.kms.api.cmk.registry.system.v1.SetSystemLabelsRequest\x1a7.kms.api.cmk.registry.system.v1.SetSystemLabelsResponse\"\x00\x12\x8d\x01\n" +
	"\x12RemoveSystemLabels\x129.kms.api.cmk.registry.system.v1.RemoveSystemLabelsRequest\x1a:.kms.api.cmk.registry.system.v1.RemoveSystemLabelsResponse\"\x00B\x9a\x02\n" +
	"\"com.kms.api.cmk.registry.system.v1B\vSystemProtoP\x01ZHgithub.com/openkcm/api-sdk/proto/kms/api/cmk/registry/system/v1;systemv1\xa2\x02\x05KACRS\xaa\x02\x1eKms.Api.Cmk.Registry.System.V1\xca\x02\x1eKms\\Api\\Cmk\\Registry\\System\\V1\xe2\x02*Kms\\Api\\Cmk\\Registry\\System\\V1\\GPBMetadata\xea\x02#Kms::Api::Cmk::Registry::System::V1b\x06proto3"

var (
	file_kms_api_cmk_registry_system_v1_system_proto_rawDescOnce sync.Once
	file_kms_api_cmk_registry_system_v1_system_proto_rawDescData []byte
)

func file_kms_api_cmk_registry_system_v1_system_proto_rawDescGZIP() []byte {
	file_kms_api_cmk_registry_system_v1_system_proto_rawDescOnce.Do(func() {
		file_kms_api_cmk_registry_system_v1_system_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kms_api_cmk_registry_system_v1_system_proto_rawDesc), len(file_kms_api_cmk_registry_system_v1_system_proto_rawDesc)))
	})
	return file_kms_api_cmk_registry_system_v1_system_proto_rawDescData
}

var file_kms_api_cmk_registry_system_v1_system_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_kms_api_cmk_registry_system_v1_system_proto_goTypes = []any{
	(*System)(nil),                          // 0: kms.api.cmk.registry.system.v1.System
	(*RegisterSystemRequest)(nil),           // 1: kms.api.cmk.registry.system.v1.RegisterSystemRequest
	(*RegisterSystemResponse)(nil),          // 2: kms.api.cmk.registry.system.v1.RegisterSystemResponse
	(*ListSystemsRequest)(nil),              // 3: kms.api.cmk.registry.system.v1.ListSystemsRequest
	(*ListSystemsResponse)(nil),             // 4: kms.api.cmk.registry.system.v1.ListSystemsResponse
	(*DeleteSystemRequest)(nil),             // 5: kms.api.cmk.registry.system.v1.DeleteSystemRequest
	(*DeleteSystemResponse)(nil),            // 6: kms.api.cmk.registry.system.v1.DeleteSystemResponse
	(*UpdateSystemL1KeyClaimRequest)(nil),   // 7: kms.api.cmk.registry.system.v1.UpdateSystemL1KeyClaimRequest
	(*UpdateSystemL1KeyClaimResponse)(nil),  // 8: kms.api.cmk.registry.system.v1.UpdateSystemL1KeyClaimResponse
	(*UnlinkSystemsFromTenantRequest)(nil),  // 9: kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantRequest
	(*UnlinkSystemsFromTenantResponse)(nil), // 10: kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantResponse
	(*LinkSystemsToTenantRequest)(nil),      // 11: kms.api.cmk.registry.system.v1.LinkSystemsToTenantRequest
	(*LinkSystemsToTenantResponse)(nil),     // 12: kms.api.cmk.registry.system.v1.LinkSystemsToTenantResponse
	(*UpdateSystemStatusRequest)(nil),       // 13: kms.api.cmk.registry.system.v1.UpdateSystemStatusRequest
	(*UpdateSystemStatusResponse)(nil),      // 14: kms.api.cmk.registry.system.v1.UpdateSystemStatusResponse
	(*SystemIdentifier)(nil),                // 15: kms.api.cmk.registry.system.v1.SystemIdentifier
	(*SetSystemLabelsRequest)(nil),          // 16: kms.api.cmk.registry.system.v1.SetSystemLabelsRequest
	(*SetSystemLabelsResponse)(nil),         // 17: kms.api.cmk.registry.system.v1.SetSystemLabelsResponse
	(*RemoveSystemLabelsRequest)(nil),       // 18: kms.api.cmk.registry.system.v1.RemoveSystemLabelsRequest
	(*RemoveSystemLabelsResponse)(nil),      // 19: kms.api.cmk.registry.system.v1.RemoveSystemLabelsResponse
	nil,                                     // 20: kms.api.cmk.registry.system.v1.System.LabelsEntry
	nil,                                     // 21: kms.api.cmk.registry.system.v1.RegisterSystemRequest.LabelsEntry
	nil,                                     // 22: kms.api.cmk.registry.system.v1.SetSystemLabelsRequest.LabelsEntry
	(v1.Status)(0),                          // 23: kms.api.cmk.types.v1.Status
}
var file_kms_api_cmk_registry_system_v1_system_proto_depIdxs = []int32{
	23, // 0: kms.api.cmk.registry.system.v1.System.status:type_name -> kms.api.cmk.types.v1.Status
	20, // 1: kms.api.cmk.registry.system.v1.System.labels:type_name -> kms.api.cmk.registry.system.v1.System.LabelsEntry
	23, // 2: kms.api.cmk.registry.system.v1.RegisterSystemRequest.status:type_name -> kms.api.cmk.types.v1.Status
	21, // 3: kms.api.cmk.registry.system.v1.RegisterSystemRequest.labels:type_name -> kms.api.cmk.registry.system.v1.RegisterSystemRequest.LabelsEntry
	0,  // 4: kms.api.cmk.registry.system.v1.ListSystemsResponse.systems:type_name -> kms.api.cmk.registry.system.v1.System
	15, // 5: kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantRequest.system_identifiers:type_name -> kms.api.cmk.registry.system.v1.SystemIdentifier
	15, // 6: kms.api.cmk.registry.system.v1.LinkSystemsToTenantRequest.system_identifiers:type_name -> kms.api.cmk.registry.system.v1.SystemIdentifier
	23, // 7: kms.api.cmk.registry.system.v1.UpdateSystemStatusRequest.status:type_name -> kms.api.cmk.types.v1.Status
	22, // 8: kms.api.cmk.registry.system.v1.SetSystemLabelsRequest.labels:type_name -> kms.api.cmk.registry.system.v1.SetSystemLabelsRequest.LabelsEntry
	1,  // 9: kms.api.cmk.registry.system.v1.Service.RegisterSystem:input_type -> kms.api.cmk.registry.system.v1.RegisterSystemRequest
	3,  // 10: kms.api.cmk.registry.system.v1.Service.ListSystems:input_type -> kms.api.cmk.registry.system.v1.ListSystemsRequest
	5,  // 11: kms.api.cmk.registry.system.v1.Service.DeleteSystem:input_type -> kms.api.cmk.registry.system.v1.DeleteSystemRequest
	7,  // 12: kms.api.cmk.registry.system.v1.Service.UpdateSystemL1KeyClaim:input_type -> kms.api.cmk.registry.system.v1.UpdateSystemL1KeyClaimRequest
	9,  // 13: kms.api.cmk.registry.system.v1.Service.UnlinkSystemsFromTenant:input_type -> kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantRequest
	11, // 14: kms.api.cmk.registry.system.v1.Service.LinkSystemsToTenant:input_type -> kms.api.cmk.registry.system.v1.LinkSystemsToTenantRequest
	13, // 15: kms.api.cmk.registry.system.v1.Service.UpdateSystemStatus:input_type -> kms.api.cmk.registry.system.v1.UpdateSystemStatusRequest
	16, // 16: kms.api.cmk.registry.system.v1.Service.SetSystemLabels:input_type -> kms.api.cmk.registry.system.v1.SetSystemLabelsRequest
	18, // 17: kms.api.cmk.registry.system.v1.Service.RemoveSystemLabels:input_type -> kms.api.cmk.registry.system.v1.RemoveSystemLabelsRequest
	2,  // 18: kms.api.cmk.registry.system.v1.Service.RegisterSystem:output_type -> kms.api.cmk.registry.system.v1.RegisterSystemResponse
	4,  // 19: kms.api.cmk.registry.system.v1.Service.ListSystems:output_type -> kms.api.cmk.registry.system.v1.ListSystemsResponse
	6,  // 20: kms.api.cmk.registry.system.v1.Service.DeleteSystem:output_type -> kms.api.cmk.registry.system.v1.DeleteSystemResponse
	8,  // 21: kms.api.cmk.registry.system.v1.Service.UpdateSystemL1KeyClaim:output_type -> kms.api.cmk.registry.system.v1.UpdateSystemL1KeyClaimResponse
	10, // 22: kms.api.cmk.registry.system.v1.Service.UnlinkSystemsFromTenant:output_type -> kms.api.cmk.registry.system.v1.UnlinkSystemsFromTenantResponse
	12, // 23: kms.api.cmk.registry.system.v1.Service.LinkSystemsToTenant:output_type -> kms.api.cmk.registry.system.v1.LinkSystemsToTenantResponse
	14, // 24: kms.api.cmk.registry.system.v1.Service.UpdateSystemStatus:output_type -> kms.api.cmk.registry.system.v1.UpdateSystemStatusResponse
	17, // 25: kms.api.cmk.registry.system.v1.Service.SetSystemLabels:output_type -> kms.api.cmk.registry.system.v1.SetSystemLabelsResponse
	19, // 26: kms.api.cmk.registry.system.v1.Service.RemoveSystemLabels:output_type -> kms.api.cmk.registry.system.v1.RemoveSystemLabelsResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_kms_api_cmk_registry_system_v1_system_proto_init() }
func file_kms_api_cmk_registry_system_v1_system_proto_init() {
	if File_kms_api_cmk_registry_system_v1_system_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kms_api_cmk_registry_system_v1_system_proto_rawDesc), len(file_kms_api_cmk_registry_system_v1_system_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kms_api_cmk_registry_system_v1_system_proto_goTypes,
		DependencyIndexes: file_kms_api_cmk_registry_system_v1_system_proto_depIdxs,
		MessageInfos:      file_kms_api_cmk_registry_system_v1_system_proto_msgTypes,
	}.Build()
	File_kms_api_cmk_registry_system_v1_system_proto = out.File
	file_kms_api_cmk_registry_system_v1_system_proto_goTypes = nil
	file_kms_api_cmk_registry_system_v1_system_proto_depIdxs = nil
}
